apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-web
  labels:
    name: {{ .Release.Name }}-web
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-web
    spec:
      containers:
        - name: web
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-config
          - secretRef:
              name: {{ .Release.Name }}-mailer
          - secretRef:
              name: {{ .Release.Name }}-google
          volumeMounts:
            {{- if .Values.webPersistence.enabled }}
            - name: files
              mountPath: /app/uploads
            {{- end }}
            - mountPath: /assets
              name: assets
          lifecycle:
            postStart:
              exec:
                command:
                  - sh
                  - -c
                  - "cp -r /app/public/* /assets"
          livenessProbe:
            httpGet:
              path: /api/v1/health_check
              port: http
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /api/v1/health_check
              port: http

        - image: nginx:1.14-alpine
          name: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /assets
              name: assets
              readOnly: true
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-conf
              subPath: nginx.conf
              readOnly: true

      volumes:
        {{- if .Values.webPersistence.enabled }}
        - name: files
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-web-pvc
        {{- end }}
        - name: nginx-conf
          configMap:
            name: {{ .Release.Name }}-nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: assets
          emptyDir: {}
